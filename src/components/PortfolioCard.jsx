// ------------------------------------------------------------------
// FILE: src/components/PortfolioCard.jsx
// ------------------------------------------------------------------
import React, { useState } from 'react';
import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';
import { ChevronDown } from 'lucide-react';

export default function PortfolioCard({ item }) {
    const [isOpen, setIsOpen] = useState(false);
    return (<div className="bg-white rounded-2xl shadow-lg overflow-hidden transition-all duration-300"><div className="p-6 cursor-pointer" onClick={() => setIsOpen(!isOpen)}><div className="flex flex-wrap justify-between items-center gap-4"><div className="flex-grow"><p className="text-sm text-amber-600 font-semibold">{item.panelId}</p><h3 className="text-xl font-bold text-slate-800">{item.projectName}</h3></div><div className="flex items-center space-x-4 sm:space-x-6 text-center"><div className='flex-shrink-0'><p className="text-sm text-slate-500">Savings</p><p className="text-lg font-bold text-green-600">₹{item.totalSavings.toLocaleString('en-IN')}</p></div><div className='flex-shrink-0'><p className="text-sm text-slate-500">ROI</p><p className="text-lg font-bold text-slate-700">{item.roi}%</p></div><span className={`transform transition-transform duration-300 ${isOpen ? 'rotate-180' : ''}`}><ChevronDown className="w-6 h-6 text-slate-400"/></span></div></div></div>{isOpen && (<div className="p-6 border-t border-slate-100 bg-slate-50"><h4 className="font-semibold text-slate-700 mb-4">Live Generation (Today)</h4><div style={{ height: '250px' }}><ResponsiveContainer width="100%" height="100%"><LineChart data={item.dailyGeneration} margin={{ top: 5, right: 20, left: -10, bottom: 5 }}><CartesianGrid strokeDasharray="3 3" stroke="#e2e8f0" /><XAxis dataKey="hour" tick={{ fill: '#64748b', fontSize: 12 }}/><YAxis tick={{ fill: '#64748b', fontSize: 12 }}/><Tooltip /><Line type="monotone" dataKey="value" name="Wh" stroke="#10b981" strokeWidth={2} dot={{ r: 4 }} activeDot={{ r: 8 }}/></LineChart></ResponsiveContainer></div><div className="mt-6 grid grid-cols-2 md:grid-cols-4 gap-4 text-sm"><div className="bg-white p-3 rounded-lg text-center"><p className="text-slate-500">Investment</p><p className="font-bold text-slate-800 mt-1">₹{item.investment.toLocaleString('en-IN')}</p></div><div className="bg-white p-3 rounded-lg text-center"><p className="text-slate-500">Status</p><p className="font-bold text-green-600 mt-1">{item.status}</p></div><div className="bg-white p-3 rounded-lg text-center"><p className="text-slate-500">Lifetime Gen.</p><p className="font-bold text-slate-800 mt-1">{item.lifetimeGeneration} kWh</p></div><div className="bg-white p-3 rounded-lg text-center"><p className="text-slate-500">Location</p><p className="font-bold text-slate-800 mt-1">{item.projectName.split(', ')[1]}</p></div></div></div>)}</div>)
};
